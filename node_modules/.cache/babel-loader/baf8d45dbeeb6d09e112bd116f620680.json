{"ast":null,"code":"var _jsxFileName = \"/home/jears0177/Projects/rsp/src/components/Main.js\";\nimport React, { useState } from 'react';\nimport { data } from \"../data/data\";\nimport { Game } from \"./Play\";\nimport { NavLink, Route, Redirect } from \"react-router-dom\";\nimport { MainC } from \"./MainC\";\nimport { Score } from \"./Score\";\nimport { Menu } from \"./Menu\";\nimport { Footer } from \"./Footer\";\nimport { PlayContainer } from \"./PlayContainer\";\nimport sound from '../assets/a30aa53e7ecd230.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCopmuterStep = data => {\n      let rand = Math.floor(Math.random() * 3);\n      setTimeout(() => {\n        this.setState({\n          computerStep: data[rand]\n        });\n      }, 2000);\n    };\n\n    this.game = () => {\n      const {\n        userStep,\n        computerStep\n      } = this.state;\n      let combine = userStep + computerStep;\n\n      switch (combine) {\n        case 'rr':\n        case 'ss':\n        case 'pp':\n          return 'draw';\n          break;\n\n        case 'rs':\n        case 'sp':\n        case 'pr':\n          this.setState(prevState => {\n            return {\n              count: Number(prevState.count) + 1\n            };\n          });\n          this.audio.play();\n          return 'You win!';\n          break;\n\n        case 'sr':\n        case 'ps':\n        case 'rp':\n          this.setState(prevState => {\n            return {\n              count: prevState.count - 1\n            };\n          });\n          this.audio.play();\n          return 'You lose!';\n          break;\n      }\n    };\n\n    this.userStepOnClick = e => {\n      this.setState({\n        userStep: e.target.name\n      });\n      this.getCopmuterStep(data);\n      setTimeout(() => {\n        this.setState({\n          message: this.game()\n        });\n      }, 2000);\n    };\n\n    this.resetOnClick = () => {\n      this.setState({\n        userStep: '',\n        computerStep: '',\n        message: ''\n      });\n    };\n\n    this.resetScore = e => {\n      const {\n        count\n      } = this.state;\n      e.preventDefault();\n      this.setState({\n        count: 0,\n        nick: ''\n      });\n    };\n\n    this.setNickname = nickname => {\n      this.setState({\n        nick: nickname\n      });\n    };\n\n    this.state = {\n      userStep: '',\n      computerStep: '',\n      message: '',\n      count: localStorage.score,\n      nick: '',\n      bgColor: ''\n    };\n    this.audio = new Audio(sound);\n  }\n\n  render() {\n    const {\n      count,\n      userStep,\n      computerStep,\n      message\n    } = this.state;\n    localStorage.score = this.state.count;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        render: () => /*#__PURE__*/_jsxDEV(Score, {\n          count: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/game\",\n        render: () => /*#__PURE__*/_jsxDEV(Score, {\n          count: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        render: () => /*#__PURE__*/_jsxDEV(MainC, {\n          play: this.props.play,\n          resetScore: this.resetScore,\n          userStepOnClick: this.userStepOnClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/game\",\n        render: () => /*#__PURE__*/_jsxDEV(PlayContainer, {\n          userStepOnClick: this.userStepOnClick,\n          resetOnClick: this.resetOnClick,\n          count: count,\n          userStep: userStep,\n          computerStep: computerStep,\n          message: message,\n          nick: this.state.nick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => /*#__PURE__*/_jsxDEV(Menu, {\n          nickname: this.state.nick,\n          setNickname: this.setNickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/jears0177/Projects/rsp/src/components/Main.js"],"names":["React","useState","data","Game","NavLink","Route","Redirect","MainC","Score","Menu","Footer","PlayContainer","sound","Main","Component","constructor","props","getCopmuterStep","rand","Math","floor","random","setTimeout","setState","computerStep","game","userStep","state","combine","prevState","count","Number","audio","play","userStepOnClick","e","target","name","message","resetOnClick","resetScore","preventDefault","nick","setNickname","nickname","localStorage","score","bgColor","Audio","render"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {data} from \"../data/data\";\nimport {Game} from \"./Play\";\nimport {NavLink, Route, Redirect} from \"react-router-dom\";\nimport {MainC} from \"./MainC\";\nimport {Score} from \"./Score\";\nimport {Menu} from \"./Menu\";\nimport {Footer} from \"./Footer\";\nimport {PlayContainer} from \"./PlayContainer\";\nimport sound from '../assets/a30aa53e7ecd230.mp3'\n\n\nexport class Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userStep: '',\n            computerStep: '',\n            message: '',\n            count: localStorage.score,\n            nick: '',\n            bgColor: ''\n        }\n\n        this.audio = new Audio(sound)\n    }\n\n    getCopmuterStep = (data) => {\n        let rand = Math.floor(Math.random() * 3)\n        setTimeout(() => {\n            this.setState({computerStep: data[rand]})\n        }, 2000)\n    }\n\n    game = () => {\n        const {userStep, computerStep} = this.state\n        let combine = userStep + computerStep\n        switch (combine) {\n            case 'rr':\n            case 'ss':\n            case 'pp':\n                return 'draw'\n                break;\n            case 'rs':\n            case 'sp':\n            case 'pr':\n\n                this.setState((prevState) => {\n                    return {\n                        count: Number(prevState.count) + 1\n                    }\n                })\n                this.audio.play()\n                return 'You win!'\n                break;\n            case 'sr':\n            case 'ps':\n            case 'rp':\n                this.setState((prevState) => {\n                    return {\n                        count: prevState.count - 1\n                    }\n                })\n                this.audio.play()\n                return 'You lose!'\n                break;\n        }\n    }\n\n    userStepOnClick = (e) => {\n        this.setState({userStep: e.target.name})\n        this.getCopmuterStep(data)\n        setTimeout(() => {\n            this.setState({message: this.game()})\n        }, 2000)\n\n    }\n\n    resetOnClick = () => {\n        this.setState({userStep: '', computerStep: '', message: '',})\n    }\n\n    resetScore = (e) => {\n        const {count} = this.state\n        e.preventDefault()\n        this.setState({count: 0, nick: ''})\n    }\n\n    setNickname = (nickname) => {\n        this.setState({nick: nickname})\n    }\n\n\n    render() {\n        const {count, userStep, computerStep, message} = this.state\n        localStorage.score = this.state.count;\n        return (\n            <div>\n                <Route path='/main' render={() => <Score count={count}/>}/>\n                <Route path='/game' render={() => <Score count={count}/>}/>\n\n                <Route path='/main' render={() => <MainC play={this.props.play} resetScore={this.resetScore}\n                                                         userStepOnClick={this.userStepOnClick}/>}/>\n\n                <Route path='/game' render={() => (\n                    <PlayContainer userStepOnClick={this.userStepOnClick}\n                                   resetOnClick={this.resetOnClick}\n                                   count={count}\n                                   userStep={userStep}\n                                   computerStep={computerStep}\n                                   message={message}\n                                   nick={this.state.nick}\n                    />)}/>\n                <Route exact path='/' render={() => <Menu nickname={this.state.nick} setNickname={this.setNickname}/>}/>\n                <Footer/>\n            </div>\n\n\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}