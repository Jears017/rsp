{"ast":null,"code":"var _jsxFileName = \"/home/jears0177/Projects/rsp/src/components/Main.js\";\nimport React, { useState } from 'react';\nimport { data } from \"../data/data\";\nimport { Game } from \"./Play\";\nimport { NavLink, Route } from \"react-router-dom\";\nimport { MainC } from \"./MainC\";\nimport { Score } from \"./Score\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCopmuterStep = data => {\n      let rand = Math.floor(Math.random() * 3);\n      setTimeout(() => {\n        this.setState({\n          computerStep: data[rand]\n        });\n      }, 2000);\n    };\n\n    this.game = () => {\n      const {\n        userStep,\n        computerStep\n      } = this.state;\n      let combine = userStep + computerStep;\n\n      switch (combine) {\n        case 'rr':\n        case 'ss':\n        case 'pp':\n          return 'draw';\n          break;\n\n        case 'rs':\n        case 'sp':\n        case 'pr':\n          /*this.setState((prevState) => {\n              return {\n                  count: prevState.count + 1\n              }\n          })*/\n          return 'You win!';\n          break;\n\n        case 'sr':\n        case 'ps':\n        case 'rp':\n          this.setState(prevState => {\n            return {\n              count: prevState.count - 1\n            };\n          });\n          return 'You lose!';\n          break;\n      }\n    };\n\n    this.userStepOnClick = e => {\n      this.setState({\n        userStep: e.target.name\n      });\n      this.getCopmuterStep(data);\n      setTimeout(() => {\n        this.setState({\n          message: this.game()\n        });\n      }, 2000);\n    };\n\n    this.resetOnClick = () => {\n      this.setState({\n        userStep: '',\n        computerStep: '',\n        message: ''\n      });\n    };\n\n    this.state = {\n      userStep: '',\n      computerStep: '',\n      message: '',\n      count: 0\n    };\n  }\n\n  render() {\n    const {\n      count,\n      userStep,\n      computerStep,\n      message\n    } = this.state;\n    localStorage.score = 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Score, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), localStorage.score, /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => /*#__PURE__*/_jsxDEV(MainC, {\n          userStepOnClick: this.userStepOnClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/game\",\n        render: () => /*#__PURE__*/_jsxDEV(Game, {\n          userStepOnClick: this.userStepOnClick,\n          resetOnClick: this.resetOnClick,\n          count: count,\n          userStep: userStep,\n          computerStep: computerStep,\n          message: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/jears0177/Projects/rsp/src/components/Main.js"],"names":["React","useState","data","Game","NavLink","Route","MainC","Score","Main","Component","constructor","props","getCopmuterStep","rand","Math","floor","random","setTimeout","setState","computerStep","game","userStep","state","combine","prevState","count","userStepOnClick","e","target","name","message","resetOnClick","render","localStorage","score"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,SAAQC,OAAR,EAAiBC,KAAjB,QAA6B,kBAA7B;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,KAAR,QAAoB,SAApB;;AAGA,OAAO,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAmC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,eAXmB,GAWAV,IAAD,IAAU;AACxB,UAAIW,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAX;AACAC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKC,QAAL,CAAc;AAACC,UAAAA,YAAY,EAAEjB,IAAI,CAACW,IAAD;AAAnB,SAAd;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAhBkB;;AAAA,SAkBnBO,IAlBmB,GAkBZ,MAAM;AACT,YAAM;AAACC,QAAAA,QAAD;AAAWF,QAAAA;AAAX,UAA2B,KAAKG,KAAtC;AACA,UAAIC,OAAO,GAAGF,QAAQ,GAAGF,YAAzB;;AAEA,cAAQI,OAAR;AACI,aAAK,IAAL;AACA,aAAK,IAAL;AACA,aAAK,IAAL;AACI,iBAAO,MAAP;AACA;;AACJ,aAAK,IAAL;AACA,aAAK,IAAL;AACA,aAAK,IAAL;AACI;AAChB;AACA;AACA;AACA;AAEgB,iBAAO,UAAP;AACA;;AACJ,aAAK,IAAL;AACA,aAAK,IAAL;AACA,aAAK,IAAL;AACI,eAAKL,QAAL,CAAeM,SAAD,IAAe;AACzB,mBAAO;AACHC,cAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,GAAkB;AADtB,aAAP;AAGH,WAJD;AAKA,iBAAO,WAAP;AACA;AA1BR;AA4BH,KAlDkB;;AAAA,SAqDnBC,eArDmB,GAqDAC,CAAD,IAAO;AACrB,WAAKT,QAAL,CAAc;AAACG,QAAAA,QAAQ,EAAEM,CAAC,CAACC,MAAF,CAASC;AAApB,OAAd;AACA,WAAKjB,eAAL,CAAqBV,IAArB;AACAe,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKC,QAAL,CAAc;AAACY,UAAAA,OAAO,EAAE,KAAKV,IAAL;AAAV,SAAd;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KA3DkB;;AAAA,SA6DnBW,YA7DmB,GA6DJ,MAAM;AACjB,WAAKb,QAAL,CAAc;AAACG,QAAAA,QAAQ,EAAE,EAAX;AAAeF,QAAAA,YAAY,EAAE,EAA7B;AAAiCW,QAAAA,OAAO,EAAE;AAA1C,OAAd;AACH,KA/DkB;;AAEf,SAAKR,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE,EADD;AAETF,MAAAA,YAAY,EAAE,EAFL;AAGTW,MAAAA,OAAO,EAAE,EAHA;AAITL,MAAAA,KAAK,EAAE;AAJE,KAAb;AAMH;;AA0DDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACP,MAAAA,KAAD;AAAQJ,MAAAA,QAAR;AAAkBF,MAAAA,YAAlB;AAAgCW,MAAAA;AAAhC,QAA2C,KAAKR,KAAtD;AACAW,IAAAA,YAAY,CAACC,KAAb,GAAqB,CAArB;AACA,wBACI;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAET;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKQ,YAAY,CAACC,KAFlB,eAGI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAE,mBAAM,QAAC,KAAD;AAAO,UAAA,eAAe,EAAE,KAAKR;AAA7B;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,MAAM,EAAE,mBACxB,QAAC,IAAD;AAAM,UAAA,eAAe,EAAE,KAAKA,eAA5B;AACM,UAAA,YAAY,EAAE,KAAKK,YADzB;AAEM,UAAA,KAAK,EAAEN,KAFb;AAGM,UAAA,QAAQ,EAAEJ,QAHhB;AAIM,UAAA,YAAY,EAAEF,YAJpB;AAKM,UAAA,OAAO,EAAEW;AALf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAvFqC","sourcesContent":["import React, {useState} from 'react'\nimport {data} from \"../data/data\";\nimport {Game} from \"./Play\";\nimport {NavLink, Route} from \"react-router-dom\";\nimport {MainC} from \"./MainC\";\nimport {Score} from \"./Score\";\n\n\nexport class Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userStep: '',\n            computerStep: '',\n            message: '',\n            count: 0\n        }\n    }\n\n\n    getCopmuterStep = (data) => {\n        let rand = Math.floor(Math.random() * 3)\n        setTimeout(() => {\n            this.setState({computerStep: data[rand]})\n        }, 2000)\n    }\n\n    game = () => {\n        const {userStep, computerStep} = this.state\n        let combine = userStep + computerStep\n\n        switch (combine) {\n            case 'rr':\n            case 'ss':\n            case 'pp':\n                return 'draw'\n                break;\n            case 'rs':\n            case 'sp':\n            case 'pr':\n                /*this.setState((prevState) => {\n                    return {\n                        count: prevState.count + 1\n                    }\n                })*/\n\n                return 'You win!'\n                break;\n            case 'sr':\n            case 'ps':\n            case 'rp':\n                this.setState((prevState) => {\n                    return {\n                        count: prevState.count - 1\n                    }\n                })\n                return 'You lose!'\n                break;\n        }\n    }\n\n\n    userStepOnClick = (e) => {\n        this.setState({userStep: e.target.name})\n        this.getCopmuterStep(data)\n        setTimeout(() => {\n            this.setState({message: this.game()})\n        }, 2000)\n    }\n\n    resetOnClick = () => {\n        this.setState({userStep: '', computerStep: '', message: ''})\n    }\n\n\n    render() {\n        const {count, userStep, computerStep, message} = this.state\n        localStorage.score = 0;\n        return (\n            <div>\n                <Score count={count}/>\n                {localStorage.score}\n                <Route exact path='/' render={() => <MainC userStepOnClick={this.userStepOnClick}/>}/>\n\n                <Route path='/game' render={() => (\n                    <Game userStepOnClick={this.userStepOnClick}\n                          resetOnClick={this.resetOnClick}\n                          count={count}\n                          userStep={userStep}\n                          computerStep={computerStep}\n                          message={message}\n                    />)}/>\n\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}